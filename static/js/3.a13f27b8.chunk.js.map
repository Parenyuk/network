{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/Post/AddPostFormRedux/AddPostFormRedux.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","profileInfo","prof","src","photos","large","profileImg","Preloader","Post","post","alt","message","likeCount","onClick","deletePost","id","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","textArea","name","placeholder","validate","required","MyPosts","memo","postId","postDataElement","postData","reverse","map","d","createRef","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","deletePostActionCreator","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.a13f27b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3905A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"ProfileInfo_profileImg__1iwQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"MyPosts_input__1H794\",\"button\":\"MyPosts_button__102OK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1NBJW\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(true);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode( false)\r\n\r\n    }\r\n    const activateMode = () => {\r\n        setEditMode( true)\r\n        props.updateStatus(status)\r\n    }\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n}\r\n\r\n\r\n        return (\r\n            <div>\r\n                {editMode &&\r\n                <div>\r\n                    <span onDoubleClick={deactivateMode}>{props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {!editMode &&\r\n                <div>\r\n                    <input onBlur={activateMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo} >\r\n            <div className={s.prof}>\r\n                <img src={profile.photos.large} className={s.profileImg}/>\r\n                <ProfileStatus status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    let onDeletePost = () => {\r\n        debugger\r\n        props.deletePost(props.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.post} >\r\n                <img src='https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg' alt='' />\r\n                <div> {props.message} like: {props.likeCount} <span><button onClick={onDeletePost} >X</button></span></div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/validators/validators\";\r\nimport {textArea} from \"../../../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 =  maxLengthCreator(10)\r\nlet AddPostForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field component={textArea} name={'newPostText'} placeholder={'Enter your post'}\r\n                       validate={[required, maxLength10]}\r\n                />\r\n                <div>\r\n                    <button>Add Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'ProfileAddPostForm'\r\n})(AddPostForm)\r\n\r\nexport default AddPostFormRedux;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport AddPostFormRedux from \"./Post/AddPostFormRedux/AddPostFormRedux\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let deletePost = (postId) => {\r\n        props.deletePost(postId)\r\n    }\r\n    let postDataElement =\r\n        [...props.postData].reverse()\r\n       .map(d => <Post id={d.id} message={d.message} likeCount={d.likeCount} deletePost={deletePost} />)\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = (postData) => {\r\n        props.addPost(postData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>My posts</div>\r\n            <div>New post</div>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n                {postDataElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {\r\n    addPostActionCreator, deletePostActionCreator,\r\n} from \"../../../redux/ProfilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:  (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n        deletePost: (postId) => {\r\n          dispatch(deletePostActionCreator(postId))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport s from './Profile.module.css'\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n// <div className={s.profile}>\r\n//     <ProfileInfo/>\r\n//     <MyPostsContainer store={props.store}/>\r\n// </div>\r\n","import React, {Component} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/ProfilePageReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n class ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default  compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    )(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}